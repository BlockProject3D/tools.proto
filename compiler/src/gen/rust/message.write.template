#fragment push impl
impl{generics} bp3d_proto::message::WriteTo for {msg_name}{generics}
#fragment push where
    where T{name}: bp3d_proto::union::UWriteTo<{discriminant_type}<&'a [u8]>, Input<'a>=T{name}>,
#fragment pop
{where_clauses}
{{
    type Input<'b> = Self;

    fn write_to<W: std::io::Write>(input: &Self, mut out: W) -> bp3d_proto::message::Result<()> {{
{fields}
#fragment push field
        {type}::write_to(&input.{name}, &mut out)?;
#fragment pop
#fragment push field_string
        {type}::write_to(&input.{name}, &mut out)?;
#fragment pop
#fragment push field_union
        T{name}::u_write_to(&input.{name}, &input.{on_name}, &mut out)?;
#fragment pop
        Ok(())
    }}
}}
#fragment pop

#fragment push impl_async
impl{generics} bp3d_proto::message::WriteToAsync for {msg_name}{generics}
#fragment push where
    where T{name}: bp3d_proto::union::UWriteToAsync<{discriminant_type}<&'a [u8]>, Input<'a>=T{name}>,
#fragment pop
{where_clauses}
{{
    async fn write_to_async<W: tokio::io::AsyncWriteExt + Unpin>(input: &Self::Input<'_>, mut out: W) -> bp3d_proto::message::Result<()> {{
{fields}
#fragment push field
        {type}::write_to_async(&input.{name}, &mut out).await?;
#fragment pop
#fragment push field_string
        {type}::write_to_async(&input.{name}, &mut out).await?;
#fragment pop
#fragment push field_union
        T{name}::u_write_to_async(&input.{name}, &input.{on_name}, &mut out).await?;
#fragment pop
        Ok(())
    }}
}}
#fragment pop

#fragment push varchar:inline
bp3d_proto::message::util::VarcharString::<{codec}>
#fragment pop

#fragment push array:inline
bp3d_proto::message::util::Array::<&'a [u8], {codec}, {type_name}<&'a [u8]>>
#fragment pop

#fragment push list:inline
bp3d_proto::message::payload::List::<&'a [u8], {codec}, {type_name}>
#fragment pop

#fragment push unsized_list:inline
bp3d_proto::message::payload::List::<&'a [u8], {codec}, {type_name}>
#fragment pop

#fragment push sized_list:inline
bp3d_proto::message::payload::list::Sized::<&'a [u8], {codec}, {size_codec}, {type_name}>
#fragment pop
